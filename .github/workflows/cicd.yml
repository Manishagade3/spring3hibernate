name: CI/CD Pipeline

on:
  push:
    branches:
      - master

# env:
#    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#    AWS_DEFAULT_REGION: ${{ env.REGION }}
#    ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
#    ECR_REPO: ${{ env.ECR_REPO }}
#    IMAGE_TAG: ${{ github.sha }}      

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1    

      - name: Push Docker Image to ECR
        run: |
          docker build -t ${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPO }}:${{ env.IMAGE_TAG }} .
          docker push ${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPO }}:${{ env.IMAGE_TAG }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.REGION }}
          ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
          ECR_REPO: ${{ env.ECR_REPO }}
          IMAGE_TAG: ${{ github.sha }}  
        

      - name: install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.27.4' # default is latest stable
        id: install    

      # - name: install kubectl
      #   run: |
      #     curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.27.4/2023-08-16/bin/linux/amd64/kubectl
      #     curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.27.4/2023-08-16/bin/linux/amd64/kubectl.sha256
      #     sha256sum -c kubectl.sha256
      #     openssl sha1 -sha256 kubectl
      #     chmod +x ./kubectl
      #     mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$HOME/bin:$PATH
      #     kubectl version --short --client

      - name: install helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0' # default is latest (stable)
          #token: ${{ secrets.GITHUB_TOKEN }} # only needed if version is 'latest'
        id: install_helm

      - name: Deploy to EKS
        run: |
          # Configure kubectl to access your EKS cluster
          aws eks update-kubeconfig --name OT-cluster5     --region us-east-1
          kubectl get nodes

      #     # Apply Kubernetes manifests for deployment
      #     kubectl apply -f kubernetes-manifests/your-app-deployment.yaml
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     KUBECONFIG: ./kubeconfig.yaml
      #
