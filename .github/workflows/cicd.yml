name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1    

      - name: Push Docker Image to ECR
        run: |
          docker build -t ${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPO }}:latest .
          docker push ${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPO }}:latest
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.REGION }}
          ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
          ECR_REPO: ${{ env.ECR_REPO }}

      # - name: Deploy to EKS
      #   run: |
      #     # Configure kubectl to access your EKS cluster
      #     aws eks update-kubeconfig --name your-eks-cluster-name --region your-eks-region

      #     # Apply Kubernetes manifests for deployment
      #     kubectl apply -f kubernetes-manifests/your-app-deployment.yaml
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     KUBECONFIG: ./kubeconfig.yaml
      #
